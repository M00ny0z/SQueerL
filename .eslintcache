[{"/Users/munoz/Projects/SQueerL/src/index.js":"1","/Users/munoz/Projects/SQueerL/src/App.js":"2","/Users/munoz/Projects/SQueerL/src/context/GroupContext.js":"3","/Users/munoz/Projects/SQueerL/src/components/GoalView.js":"4","/Users/munoz/Projects/SQueerL/src/components/Header.js":"5","/Users/munoz/Projects/SQueerL/src/components/Home.js":"6","/Users/munoz/Projects/SQueerL/src/components/ProfileView.js":"7","/Users/munoz/Projects/SQueerL/src/components/GlobalView.js":"8","/Users/munoz/Projects/SQueerL/src/components/CurrentGoalList.js":"9","/Users/munoz/Projects/SQueerL/src/components/AddGoalModal.js":"10","/Users/munoz/Projects/SQueerL/src/components/Identifier.js":"11","/Users/munoz/Projects/SQueerL/src/components/Achievement.js":"12","/Users/munoz/Projects/SQueerL/src/components/Goal.js":"13","/Users/munoz/Projects/SQueerL/src/hooks/useGoals.js":"14","/Users/munoz/Projects/SQueerL/src/hooks/useGroupProgress.js":"15","/Users/munoz/Projects/SQueerL/src/hooks/useAchievements.js":"16","/Users/munoz/Projects/SQueerL/src/hooks/useGlobalGoals.js":"17"},{"size":282,"mtime":1611506320947,"results":"18","hashOfConfig":"19"},{"size":1043,"mtime":1611506100398,"results":"20","hashOfConfig":"19"},{"size":165,"mtime":1611479216881,"results":"21","hashOfConfig":"19"},{"size":4041,"mtime":1611489394152,"results":"22","hashOfConfig":"19"},{"size":1784,"mtime":1611502445872,"results":"23","hashOfConfig":"19"},{"size":2983,"mtime":1611488451692,"results":"24","hashOfConfig":"19"},{"size":947,"mtime":1611495857336,"results":"25","hashOfConfig":"19"},{"size":739,"mtime":1611499254231,"results":"26","hashOfConfig":"19"},{"size":463,"mtime":1611489128784,"results":"27","hashOfConfig":"19"},{"size":1140,"mtime":1611477268338,"results":"28","hashOfConfig":"19"},{"size":2068,"mtime":1611492512905,"results":"29","hashOfConfig":"19"},{"size":377,"mtime":1611496143772,"results":"30","hashOfConfig":"19"},{"size":1681,"mtime":1611499361396,"results":"31","hashOfConfig":"19"},{"size":1237,"mtime":1611485498701,"results":"32","hashOfConfig":"19"},{"size":1257,"mtime":1611489362238,"results":"33","hashOfConfig":"19"},{"size":975,"mtime":1611496135884,"results":"34","hashOfConfig":"19"},{"size":1375,"mtime":1611498927923,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"810bnn",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/munoz/Projects/SQueerL/src/index.js",[],"/Users/munoz/Projects/SQueerL/src/App.js",["77"],"/Users/munoz/Projects/SQueerL/src/context/GroupContext.js",["78"],"import React, { createContext } from 'react';\nexport default createContext({\n   selectedGroup: {\n      name: '',\n      code: ''\n   },\n   updateSelected: () => {}\n});",["79","80"],"/Users/munoz/Projects/SQueerL/src/components/GoalView.js",["81","82","83","84","85"],"import React, { useContext, useEffect, useState } from 'react';\nimport useGroupProgress from '../hooks/useGroupProgress';\nimport GroupContext from '../context/GroupContext';\nimport useGoals from '../hooks/useGoals';\nimport '../styles/index.css';\n\nimport { HorizontalBar, Pie } from 'react-chartjs-2';\n\nconst GoalView = () => {\n   const { selectedGroup, updateSelected } = useContext(GroupContext);\n   const [groupState, getGroupState] = useGroupProgress();\n   const goals = useGoals();\n\n   const renderBody = () => {\n      if (groupState[selectedGroup]) {\n         const groupInfo = groupState[selectedGroup];\n         const options = {\n            scales: {\n               xAxes: [{\n                   ticks: {\n                       suggestedMin: 0\n                   }\n               }]\n           }\n         };\n\n         const createBoostInfo = () => {\n            const labelOutput = [\"Your Progress\"];\n            const dataOutput = [groupInfo[\"user-progress\"]];\n            for (const member of groupInfo.members) {\n               labelOutput.push(member.user);\n               dataOutput.push(member.boost);\n            }\n            return [labelOutput, dataOutput];\n         };\n\n         const createDelayInfo = () => {\n            const labelOutput = [\"Your Progress\"];\n            const dataOutput = [groupInfo[\"user-progress\"]];\n            for (const member of groupInfo.members) {\n               labelOutput.push(member.user);\n               dataOutput.push(member.delay);\n            }\n            return [labelOutput, dataOutput];\n         };\n\n         const [boostLabelOutput, boostDataOutput] = createBoostInfo();\n         const [delayLabelOutput, delayDataOutput] = createDelayInfo();\n\n         const boostData = {\n            labels: boostLabelOutput,\n            datasets: [\n              {\n                label: 'Group Statistics',\n                borderWidth: 1,\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: boostDataOutput,\n                minBarLength: 2,\n                hoverBackgroundColor: 'rgba(255,99,132,1)',\n                backgroundColor: [\"#16C79A\", \"#19456B\"]\n              }\n            ]\n         };\n\n         const delayData = {\n            labels: delayLabelOutput,\n            datasets: [\n              {\n                label: 'Group Statistics',\n                borderWidth: 1,\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: delayDataOutput,\n                minBarLength: 2,\n                hoverBackgroundColor: 'rgba(255,99,132,1)',\n                backgroundColor: [\"#16C79A\", \"#19456B\"]\n              }\n            ]\n         };\n\n         const overallData = {\n            labels: [\"Total Boosts\", \"Total Delays\"],\n            datasets: [\n              {\n                label: 'Overall Statistics',\n                borderWidth: 1,\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: [groupInfo[\"total-boosts\"], groupInfo[\"total-delays\"]],\n                minBarLength: 2,\n                hoverBackgroundColor: 'rgba(255,99,132,1)',\n                backgroundColor: [\"#16C79A\", \"#19456B\"]\n              }\n            ]\n          };\n\n         return (\n            <div className=\"container\">\n               <h2 className=\"text-left\">Overall Statistics</h2>\n               <Pie data={overallData} width={100} height={50} />\n\n               <h2 className=\"text-left\">Boost Statistics</h2>\n               <HorizontalBar data={boostData} width={100} height={50} options={options} />\n\n               <h2 className=\"text-left\">Delay Statistics</h2>\n               <HorizontalBar data={delayData} width={100} height={50} options={options} />\n            </div>\n         )\n      }\n   };\n\n   return (\n      <div>\n         <header>\n            <h1 className=\"text-bold text-center\">Goal: { selectedGroup.name }</h1>\n            <h1 className=\"text-bold text-center\">Add Code: { selectedGroup }</h1>\n         </header>\n\n         {\n            renderBody()\n         }\n      </div>\n   );\n};\n\nexport default GoalView;","/Users/munoz/Projects/SQueerL/src/components/Header.js",[],"/Users/munoz/Projects/SQueerL/src/components/Home.js",["86"],"import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport '../styles/index.css';\n\nimport CurrentGoalList from './CurrentGoalList';\nimport AddGoalModal from './AddGoalModal'\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form'\n\nconst Home = () => {\n   const [show, setShow] = useState(false);\n\n   const handleClose = () => setShow(false);\n   const handleShow = () => setShow(true);\n\n   const validate = values => {\n      const errors = {};\n      if (!values.name || values.name.length < 4) {\n   \n        errors.name = 'Required';\n   \n      }\n      return errors;\n    };\n\n   const formik = useFormik({\n\n      initialValues: {\n        name: '',\n        frequency: ''\n      },\n      validate,\n      onSubmit: values => {\n \n        alert(JSON.stringify(values, null, 2));\n \n      },\n    });\n\n   return (\n      <div className=\"container d-flex flex-column align-items-center\">\n         <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n               <Modal.Title>Add a Goal</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n               <form onSubmit={formik.handleSubmit}>\n                  <div className=\"d-flex flex-column mb-2\">\n                     <label htmlFor=\"text\">Goal Name</label>\n                     <input name=\"name\" minlength=\"4\" type=\"text\" onChange={formik.handleChange} \n                           value={formik.values.name}\n                     />\n                     {formik.errors.name? <div className=\"text-danger\">{formik.errors.name}</div> : null}\n                  </div>\n\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                     <Form.Label>Select Frequency</Form.Label>\n                     <Form.Control name=\"frequency\" \n                                   as=\"select\" \n                                   value={formik.values.frequency}\n                                   onChange={formik.handleChange}\n                     >\n                        <option>Once a Day</option>\n                        <option>Every Other Day</option>\n                        <option>Once a Week</option>\n                     </Form.Control>\n                  </Form.Group>\n                  <div className=\"d-flex justify-content-end\">\n                     <Button variant=\"secondary\" onClick={handleClose} className=\"mr-3\">Close</Button>\n                     <Button type=\"submit\" variant=\"primary\">Submit</Button>\n                  </div>\n               </form>\n            </Modal.Body>\n         </Modal>\n         <div className=\"mt-2 w-100\">\n            <h1 className=\"border text-center p-3 title-border\">\n               Add a Goal\n               <i className=\"fas fa-plus-square ml-3 add\" onClick={handleShow}></i>\n            </h1>\n         </div>\n\n         <h1 className=\"text-center\">Current Goals</h1>\n         <CurrentGoalList />\n      </div> \n   );\n};\n\nexport default Home;","/Users/munoz/Projects/SQueerL/src/components/ProfileView.js",["87","88"],"import React, { useState } from 'react';\nimport Faker from 'faker';\nimport useAchievements from '../hooks/useAchievements';\n\nimport Identifier from './Identifier';\nimport Achievement from './Achievement';\n\nconst ProfileView = () => {\n   const achievements = useAchievements();\n\n   const renderAchievements = () => {\n      return achievements.map(\n         (achievement) => <Achievement name={ achievement.name } />\n      );\n   };\n\n   return (\n      <div className=\"d-flex flex-column align-items-center container\">\n         <h1>My Profile</h1>\n         <Identifier />\n         <div className=\"d-flex w-100 flex-column align-items-center border title-border pb-3 pl-3 pr-3 mt-3\">\n            <h2 className=\"text-left w-100\">Achievements</h2>\n            <div className=\"d-flex flex-wrap\">\n               {\n                  renderAchievements() \n               }\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default ProfileView;","/Users/munoz/Projects/SQueerL/src/components/GlobalView.js",[],"/Users/munoz/Projects/SQueerL/src/components/CurrentGoalList.js",[],"/Users/munoz/Projects/SQueerL/src/components/AddGoalModal.js",[],"/Users/munoz/Projects/SQueerL/src/components/Identifier.js",[],"/Users/munoz/Projects/SQueerL/src/components/Achievement.js",[],"/Users/munoz/Projects/SQueerL/src/components/Goal.js",["89"],"import React, { useContext } from 'react';\nimport '../styles/index.css';\nimport GroupContext from '../context/GroupContext';\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { Link } from 'react-router-dom';\n\nconst Goal = (props) => {\n   const { selectedGroup, updateSelected } = useContext(GroupContext);\n\n   const renderDropDown = () => {\n      if (!props.global) {\n         return (\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Change Frequency\">\n               <Dropdown.Item href=\"#/action-1\">Once a day</Dropdown.Item>\n               <Dropdown.Item href=\"#/action-2\">Once a week</Dropdown.Item>\n               <Dropdown.Item href=\"#/action-3\">Every other day</Dropdown.Item>\n            </DropdownButton>\n         );\n      } else {\n         return (\n            <Button variant=\"success\">Add Goal</Button>\n         );\n      }\n   };\n\n   return (\n      <Card key={props.code} className=\"mb-3 mr-3\" style={{ height: '10rem', width: '15rem' }}>\n         <Card.Body className=\"d-flex flex-column align-items-center justify-content-between\">\n            <header>\n               <Link to={`/goal/${props.code}`} onClick={() => updateSelected(props.code)}>\n                  <Card.Title className=\"text-center\">{ props.name }</Card.Title>\n               </Link>\n               <Card.Subtitle className=\"mb-2 text-center\">Add Code: { props.code }</Card.Subtitle>\n            </header>\n\n            {\n               renderDropDown()\n            }\n         </Card.Body>\n      </Card>\n   );\n};\n\nexport default Goal;","/Users/munoz/Projects/SQueerL/src/hooks/useGoals.js",[],"/Users/munoz/Projects/SQueerL/src/hooks/useGroupProgress.js",["90"],"import { useState, useEffect } from 'react';\n\nconst useGroupProgress = () => {\n   const [groupState, setGroupState] = useState({});\n\n   useEffect(() => getGroupInfo(\"xyz\"), []);\n\n   const getGroupInfo = async (code) => {\n      //const response = await api(`/group/${code}`);\n      const response = {\n         data: {\n                  code: \"XYZ123\",\n                  name: \"Walk a mile\",\n                  \"total-boosts\": 10,\n                  \"total-delays\": 2,\n                  \"user-progress\": 3,\n                  members: [\n                     {\n                        user: \"Enigmatic Elephant\",\n                        boost: 30,\n                        delay: 70\n                     },\n                     {\n                        user: \"Dancing Dino\",\n                        boost: 60,\n                        delay: 40\n                     },\n                     {\n                        user: \"Manic Money\",\n                        boost: 80,\n                        delay: 20\n                     },\n                  ]\n         }\n      };\n      const groupInfo = await response.data;\n      setGroupState({...groupState, [groupInfo.code]: groupInfo});\n   };\n\n   return [groupState, setGroupState];\n};\n\nexport default useGroupProgress;","/Users/munoz/Projects/SQueerL/src/hooks/useAchievements.js",[],"/Users/munoz/Projects/SQueerL/src/hooks/useGlobalGoals.js",[],{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":27},{"ruleId":"91","severity":1,"message":"95","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"91","severity":1,"message":"100","line":1,"column":29,"nodeType":"93","messageId":"94","endLine":1,"endColumn":38},{"ruleId":"91","severity":1,"message":"101","line":1,"column":40,"nodeType":"93","messageId":"94","endLine":1,"endColumn":48},{"ruleId":"91","severity":1,"message":"102","line":10,"column":27,"nodeType":"93","messageId":"94","endLine":10,"endColumn":41},{"ruleId":"91","severity":1,"message":"103","line":11,"column":23,"nodeType":"93","messageId":"94","endLine":11,"endColumn":36},{"ruleId":"91","severity":1,"message":"104","line":12,"column":10,"nodeType":"93","messageId":"94","endLine":12,"endColumn":15},{"ruleId":"91","severity":1,"message":"105","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":20},{"ruleId":"91","severity":1,"message":"101","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"106","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"107","line":12,"column":12,"nodeType":"93","messageId":"94","endLine":12,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":6,"column":41,"nodeType":"110","endLine":6,"endColumn":43,"suggestions":"111"},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'updateSelected' is assigned a value but never used.","'getGroupState' is assigned a value but never used.","'goals' is assigned a value but never used.","'AddGoalModal' is defined but never used.","'Faker' is defined but never used.","'selectedGroup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getGroupInfo'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [getGroupInfo]",{"range":"117","text":"118"},[173,175],"[getGroupInfo]"]