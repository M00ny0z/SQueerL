{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munoz/Projects/SQueerL/frontend/src/components/GoalView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport useGroupProgress from '../hooks/useGroupProgress';\nimport GroupContext from '../context/GroupContext';\nimport useGoals from '../hooks/useGoals';\nimport '../styles/index.css';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst GoalView = () => {\n  _s();\n\n  const {\n    selectedGroup,\n    updateSelected\n  } = useContext(GroupContext);\n  const [groupState, getGroupState] = useGroupProgress();\n  const goals = useGoals();\n  useEffect(() => updateSelected({\n    name: 'Walk a Mile a Day',\n    code: \"ZYX123\"\n  }), []);\n\n  const renderBody = () => {\n    if (groupState[selectedGroup.code]) {\n      const groupInfo = groupState[selectedGroup.code];\n      const options = {\n        scales: {\n          xAxes: [{\n            ticks: {\n              suggestedMin: 0\n            }\n          }]\n        }\n      };\n\n      const createInfo = () => {\n        const labeloutput = [\"Total Boosts\", \"Total Delays\", \"Your Progress\"];\n        const dataOutput = [groupInfo[\"total-boosts\"], groupInfo[\"total-delays\"], groupInfo[\"user-progress\"]];\n\n        for (const member of groupInfo.members) {\n          output.push(member.user);\n        }\n\n        return [labelOutput, dataOutput];\n      };\n\n      const [labelOutput, dataOutput] = createInfo();\n      const data = {\n        labels: labelOutput,\n        datasets: [{\n          label: 'Group Statistics',\n          borderWidth: 1,\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: [groupInfo[\"total-boosts\"], groupInfo[\"total-delays\"], groupInfo[\"user-progress\"]],\n          minBarLength: 2,\n          hoverBackgroundColor: 'rgba(255,99,132,1)',\n          backgroundColor: [\"#00ff00\", \"#ff00ff\"]\n        }]\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Total Boosts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalBar, {\n          data: data,\n          width: 100,\n          height: 50,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Total Delays:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-bold text-center\",\n        children: [\"Goal: \", selectedGroup.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-bold text-center\",\n        children: [\"Add Code: \", selectedGroup.code]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this), renderBody()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GoalView, \"ETLH09WDzuEj0Fw5YZVsO4VCIxM=\", false, function () {\n  return [useGroupProgress, useGoals];\n});\n\n_c = GoalView;\nexport default GoalView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalView\");","map":{"version":3,"sources":["/Users/munoz/Projects/SQueerL/frontend/src/components/GoalView.js"],"names":["React","useContext","useEffect","useState","useGroupProgress","GroupContext","useGoals","HorizontalBar","GoalView","selectedGroup","updateSelected","groupState","getGroupState","goals","name","code","renderBody","groupInfo","options","scales","xAxes","ticks","suggestedMin","createInfo","labeloutput","dataOutput","member","members","output","push","user","labelOutput","data","labels","datasets","label","borderWidth","hoverBorderColor","minBarLength","hoverBackgroundColor","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport useGroupProgress from '../hooks/useGroupProgress';\nimport GroupContext from '../context/GroupContext';\nimport useGoals from '../hooks/useGoals';\nimport '../styles/index.css';\n\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst GoalView = () => {\n   const { selectedGroup, updateSelected } = useContext(GroupContext);\n   const [groupState, getGroupState] = useGroupProgress();\n   const goals = useGoals();\n\n   useEffect(() => updateSelected({name: 'Walk a Mile a Day', code: \"ZYX123\" }), []);\n\n   const renderBody = () => {\n      if (groupState[selectedGroup.code]) {\n         const groupInfo = groupState[selectedGroup.code];\n         const options = {\n            scales: {\n               xAxes: [{\n                   ticks: {\n                       suggestedMin: 0\n                   }\n               }]\n           }\n         };\n\n         const createInfo = () => {\n            const labeloutput = [\"Total Boosts\", \"Total Delays\", \"Your Progress\"];\n            const dataOutput = [groupInfo[\"total-boosts\"], groupInfo[\"total-delays\"], groupInfo[\"user-progress\"]]\n            for (const member of groupInfo.members) {\n               output.push(member.user);\n            }\n            return [labelOutput, dataOutput];\n         };\n\n         const [labelOutput, dataOutput] = createInfo();\n\n         const data = {\n            labels: labelOutput,\n            datasets: [\n              {\n                label: 'Group Statistics',\n                borderWidth: 1,\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: [groupInfo[\"total-boosts\"], groupInfo[\"total-delays\"], groupInfo[\"user-progress\"]],\n                minBarLength: 2,\n                hoverBackgroundColor: 'rgba(255,99,132,1)',\n                backgroundColor: [\"#00ff00\", \"#ff00ff\"]\n              }\n            ]\n          };\n\n         return (\n            <div className=\"container\">\n               <p>Total Boosts:</p>\n               <HorizontalBar data={data} width={100} height={50} options={options} />\n               <p>Total Delays:</p>\n            </div>\n         )\n      }\n   };\n\n   return (\n      <div>\n         <header>\n            <h1 className=\"text-bold text-center\">Goal: { selectedGroup.name }</h1>\n            <h1 className=\"text-bold text-center\">Add Code: { selectedGroup.code }</h1>\n         </header>\n\n         {\n            renderBody()\n         }\n      </div>\n   );\n};\n\nexport default GoalView;"]},"metadata":{},"sourceType":"module"}