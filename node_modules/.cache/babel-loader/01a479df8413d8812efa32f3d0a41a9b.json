{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/munoz/Projects/SQueerL/src/components/GoalView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport useGroupProgress from '../hooks/useGroupProgress';\nimport GroupContext from '../context/GroupContext';\nimport useGoals from '../hooks/useGoals';\nimport '../styles/index.css';\nimport { HorizontalBar, Pie } from 'react-chartjs-2';\n\nconst GoalView = () => {\n  _s();\n\n  const {\n    selectedGroup,\n    updateSelected\n  } = useContext(GroupContext);\n  const [groupState, getGroupState] = useGroupProgress();\n  const goals = useGoals();\n\n  const renderBody = () => {\n    if (groupState[selectedGroup]) {\n      const groupInfo = groupState[selectedGroup];\n      const options = {\n        scales: {\n          xAxes: [{\n            ticks: {\n              suggestedMin: 0\n            }\n          }]\n        }\n      };\n\n      const createBoostInfo = () => {\n        const labelOutput = [\"Your Progress\"];\n        const dataOutput = [groupInfo[\"user-progress\"]];\n\n        for (const member of groupInfo.members) {\n          labelOutput.push(member.user);\n          dataOutput.push(member.boost);\n        }\n\n        return [labelOutput, dataOutput];\n      };\n\n      const createDelayInfo = () => {\n        const labelOutput = [\"Your Progress\"];\n        const dataOutput = [groupInfo[\"user-progress\"]];\n\n        for (const member of groupInfo.members) {\n          labelOutput.push(member.user);\n          dataOutput.push(member.delay);\n        }\n\n        return [labelOutput, dataOutput];\n      };\n\n      const [boostLabelOutput, boostDataOutput] = createBoostInfo();\n      const [delayLabelOutput, delayDataOutput] = createDelayInfo();\n      const boostData = {\n        labels: boostLabelOutput,\n        datasets: [{\n          label: 'Group Statistics',\n          borderWidth: 1,\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: boostDataOutput,\n          minBarLength: 2,\n          hoverBackgroundColor: 'rgba(255,99,132,1)',\n          backgroundColor: [\"#16C79A\", \"#19456B\"]\n        }]\n      };\n      const delayData = {\n        labels: delayLabelOutput,\n        datasets: [{\n          label: 'Group Statistics',\n          borderWidth: 1,\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: delayDataOutput,\n          minBarLength: 2,\n          hoverBackgroundColor: 'rgba(255,99,132,1)',\n          backgroundColor: [\"#16C79A\", \"#19456B\"]\n        }]\n      };\n      const overallData = {\n        labels: [\"Total Boosts\", \"Total Delays\"],\n        datasets: [{\n          label: 'Overall Statistics',\n          borderWidth: 1,\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: [groupInfo[\"total-boosts\"], groupInfo[\"total-delays\"]],\n          minBarLength: 2,\n          hoverBackgroundColor: 'rgba(255,99,132,1)',\n          backgroundColor: [\"#16C79A\", \"#19456B\"]\n        }]\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-left\",\n          children: \"Overall Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: overallData,\n          width: 100,\n          height: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-left\",\n          children: \"Boost Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalBar, {\n          data: boostData,\n          width: 100,\n          height: 50,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-left\",\n          children: \"Delay Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalBar, {\n          data: delayData,\n          width: 100,\n          height: 50,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-bold text-center\",\n        children: [\"Goal: \", selectedGroup.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-bold text-center\",\n        children: [\"Add Code: \", selectedGroup]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 10\n    }, this), renderBody()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GoalView, \"EXxiGms3Om71sFqts5KQ/O62YkI=\", false, function () {\n  return [useGroupProgress, useGoals];\n});\n\n_c = GoalView;\nexport default GoalView;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalView\");","map":{"version":3,"sources":["/Users/munoz/Projects/SQueerL/src/components/GoalView.js"],"names":["React","useContext","useEffect","useState","useGroupProgress","GroupContext","useGoals","HorizontalBar","Pie","GoalView","selectedGroup","updateSelected","groupState","getGroupState","goals","renderBody","groupInfo","options","scales","xAxes","ticks","suggestedMin","createBoostInfo","labelOutput","dataOutput","member","members","push","user","boost","createDelayInfo","delay","boostLabelOutput","boostDataOutput","delayLabelOutput","delayDataOutput","boostData","labels","datasets","label","borderWidth","hoverBorderColor","data","minBarLength","hoverBackgroundColor","backgroundColor","delayData","overallData","name"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport useGroupProgress from '../hooks/useGroupProgress';\nimport GroupContext from '../context/GroupContext';\nimport useGoals from '../hooks/useGoals';\nimport '../styles/index.css';\n\nimport { HorizontalBar, Pie } from 'react-chartjs-2';\n\nconst GoalView = () => {\n   const { selectedGroup, updateSelected } = useContext(GroupContext);\n   const [groupState, getGroupState] = useGroupProgress();\n   const goals = useGoals();\n\n   const renderBody = () => {\n      if (groupState[selectedGroup]) {\n         const groupInfo = groupState[selectedGroup];\n         const options = {\n            scales: {\n               xAxes: [{\n                   ticks: {\n                       suggestedMin: 0\n                   }\n               }]\n           }\n         };\n\n         const createBoostInfo = () => {\n            const labelOutput = [\"Your Progress\"];\n            const dataOutput = [groupInfo[\"user-progress\"]];\n            for (const member of groupInfo.members) {\n               labelOutput.push(member.user);\n               dataOutput.push(member.boost);\n            }\n            return [labelOutput, dataOutput];\n         };\n\n         const createDelayInfo = () => {\n            const labelOutput = [\"Your Progress\"];\n            const dataOutput = [groupInfo[\"user-progress\"]];\n            for (const member of groupInfo.members) {\n               labelOutput.push(member.user);\n               dataOutput.push(member.delay);\n            }\n            return [labelOutput, dataOutput];\n         };\n\n         const [boostLabelOutput, boostDataOutput] = createBoostInfo();\n         const [delayLabelOutput, delayDataOutput] = createDelayInfo();\n\n         const boostData = {\n            labels: boostLabelOutput,\n            datasets: [\n              {\n                label: 'Group Statistics',\n                borderWidth: 1,\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: boostDataOutput,\n                minBarLength: 2,\n                hoverBackgroundColor: 'rgba(255,99,132,1)',\n                backgroundColor: [\"#16C79A\", \"#19456B\"]\n              }\n            ]\n         };\n\n         const delayData = {\n            labels: delayLabelOutput,\n            datasets: [\n              {\n                label: 'Group Statistics',\n                borderWidth: 1,\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: delayDataOutput,\n                minBarLength: 2,\n                hoverBackgroundColor: 'rgba(255,99,132,1)',\n                backgroundColor: [\"#16C79A\", \"#19456B\"]\n              }\n            ]\n         };\n\n         const overallData = {\n            labels: [\"Total Boosts\", \"Total Delays\"],\n            datasets: [\n              {\n                label: 'Overall Statistics',\n                borderWidth: 1,\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: [groupInfo[\"total-boosts\"], groupInfo[\"total-delays\"]],\n                minBarLength: 2,\n                hoverBackgroundColor: 'rgba(255,99,132,1)',\n                backgroundColor: [\"#16C79A\", \"#19456B\"]\n              }\n            ]\n          };\n\n         return (\n            <div className=\"container\">\n               <h2 className=\"text-left\">Overall Statistics</h2>\n               <Pie data={overallData} width={100} height={50} />\n\n               <h2 className=\"text-left\">Boost Statistics</h2>\n               <HorizontalBar data={boostData} width={100} height={50} options={options} />\n\n               <h2 className=\"text-left\">Delay Statistics</h2>\n               <HorizontalBar data={delayData} width={100} height={50} options={options} />\n            </div>\n         )\n      }\n   };\n\n   return (\n      <div>\n         <header>\n            <h1 className=\"text-bold text-center\">Goal: { selectedGroup.name }</h1>\n            <h1 className=\"text-bold text-center\">Add Code: { selectedGroup }</h1>\n         </header>\n\n         {\n            renderBody()\n         }\n      </div>\n   );\n};\n\nexport default GoalView;"]},"metadata":{},"sourceType":"module"}