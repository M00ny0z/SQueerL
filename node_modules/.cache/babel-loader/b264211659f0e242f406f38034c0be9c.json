{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useAchievements = () => {\n  _s();\n\n  const [achievements, setAchievements] = useState([]);\n  /**\n    * Makes an initial request of the users current goals and stores it for use\n    */\n\n  useEffect(() => {\n    const requestAchievements = async () => {\n      getAchievements();\n    };\n\n    requestAchievements();\n  }, []);\n\n  const getAchievements = async () => {\n    // const response = await api('/api/achievements');\n    const response = {\n      data: [{\n        name: \"Tracking 3 Goals\"\n      }, {\n        name: \"5 Day Streak\"\n      }, {\n        name: \"10 Day Streak\"\n      }, {\n        name: \"5 Person Group\"\n      }]\n    };\n    const requestedAchievements = response.data;\n    setAchievements(requestedAchievements);\n  };\n\n  return achievements;\n};\n\n_s(useAchievements, \"nKMvePRuBynotSBsIfo1WeQZI2Q=\");\n\nexport default useAchievements;","map":{"version":3,"sources":["/Users/munoz/Projects/SQueerL/frontend/src/hooks/useAchievements.js"],"names":["useState","useEffect","useAchievements","achievements","setAchievements","requestAchievements","getAchievements","response","data","name","requestedAchievements"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AAEA;AACH;AACA;;AACIC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,mBAAmB,GAAG,YAAY;AACrCC,MAAAA,eAAe;AACjB,KAFD;;AAIAD,IAAAA,mBAAmB;AACrB,GANS,EAMP,EANO,CAAT;;AAQD,QAAMC,eAAe,GAAG,YAAY;AACjC;AACA,UAAMC,QAAQ,GAAG;AACdC,MAAAA,IAAI,EAAE,CACH;AACGC,QAAAA,IAAI,EAAE;AADT,OADG,EAKH;AACGA,QAAAA,IAAI,EAAE;AADT,OALG,EAQH;AACGA,QAAAA,IAAI,EAAE;AADT,OARG,EAWH;AACGA,QAAAA,IAAI,EAAE;AADT,OAXG;AADQ,KAAjB;AAiBA,UAAMC,qBAAqB,GAAGH,QAAQ,CAACC,IAAvC;AACAJ,IAAAA,eAAe,CAACM,qBAAD,CAAf;AACF,GArBD;;AAuBA,SAAOP,YAAP;AACF,CAtCD;;GAAMD,e;;AAwCN,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useAchievements = () => {\n   const [achievements, setAchievements] = useState([]);\n\n   /**\n     * Makes an initial request of the users current goals and stores it for use\n     */\n    useEffect(() => {\n      const requestAchievements = async () => {\n         getAchievements();\n      };\n\n      requestAchievements();\n   }, []);\n\n   const getAchievements = async () => {\n      // const response = await api('/api/achievements');\n      const response = {\n         data: [\n            {\n               name: \"Tracking 3 Goals\",\n\n            },\n            {\n               name: \"5 Day Streak\"\n            }, \n            {\n               name: \"10 Day Streak\"\n            }, \n            {\n               name: \"5 Person Group\"\n            }\n         ]\n      };\n      const requestedAchievements = response.data;\n      setAchievements(requestedAchievements);\n   };\n\n   return achievements;\n};\n\nexport default useAchievements;"]},"metadata":{},"sourceType":"module"}