{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useGlobalGoals = () => {\n  _s();\n\n  const [globalGoals, setGlobalGoals] = useState([]);\n  /**\n    * Makes an initial request of the users current goals and stores it for use\n    */\n\n  useEffect(() => {\n    const requestGlobalGoals = async () => {\n      getGlobalGoals();\n    };\n\n    requestGlobalGoals();\n  }, []);\n  /**\n    * Makes a GET request to the API for the users' goals\n    * TODO: Once API/Backend is up, make an actual request\n    * NOTE: Uses fake data until API/Backend is up\n    */\n\n  const getGlobalGoals = async () => {\n    //const response = await api('/members');\n    const response = {\n      data: [{\n        name: \"Start/Write in a positivity journal\",\n        \"add-code\": \"POS247\"\n      }, {\n        name: \"Reflect on your day\",\n        \"add-code\": \"YOU123\"\n      }, {\n        name: \"Take a walk for 30 minutes\",\n        \"add-code\": \"YOU123\"\n      }, {\n        name: \"Meditate for 30 minutes\",\n        \"add-code\": \"MED333\"\n      }, {\n        name: \"Volunteer for a local organization\",\n        \"add-code\": \"VOL247\"\n      }]\n    };\n    const requestedGlobalGoals = response.data;\n    setGlobalGoals(requestedGlobalGoals);\n  };\n\n  return globalGoals;\n};\n\n_s(useGlobalGoals, \"F08Stx2SBgBf9J00+mOMWUEnwLI=\");\n\nexport default useGlobalGoals;","map":{"version":3,"sources":["/Users/munoz/Projects/SQueerL/frontend/src/hooks/useGlobalGoals.js"],"names":["useState","useEffect","useGlobalGoals","globalGoals","setGlobalGoals","requestGlobalGoals","getGlobalGoals","response","data","name","requestedGlobalGoals"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AAEA;AACH;AACA;;AACGC,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMI,kBAAkB,GAAG,YAAY;AACpCC,MAAAA,cAAc;AAChB,KAFD;;AAIAD,IAAAA,kBAAkB;AACpB,GANQ,EAMN,EANM,CAAT;AAQA;AACH;AACA;AACA;AACA;;AACI,QAAMC,cAAc,GAAG,YAAY;AACjC;AACA,UAAMC,QAAQ,GAAG;AACdC,MAAAA,IAAI,EAAE,CAAC;AACJC,QAAAA,IAAI,EAAE,qCADF;AAEJ,oBAAY;AAFR,OAAD,EAIN;AACGA,QAAAA,IAAI,EAAE,qBADT;AAEG,oBAAY;AAFf,OAJM,EAQN;AACGA,QAAAA,IAAI,EAAE,4BADT;AAEG,oBAAY;AAFf,OARM,EAYN;AACGA,QAAAA,IAAI,EAAE,yBADT;AAEG,oBAAY;AAFf,OAZM,EAgBN;AACGA,QAAAA,IAAI,EAAE,oCADT;AAEG,oBAAY;AAFf,OAhBM;AADQ,KAAjB;AAsBA,UAAMC,oBAAoB,GAAGH,QAAQ,CAACC,IAAtC;AACAJ,IAAAA,cAAc,CAACM,oBAAD,CAAd;AACF,GA1BA;;AA4BD,SAAOP,WAAP;AACF,CAhDD;;GAAMD,c;;AAkDN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useGlobalGoals = () => {\n   const [globalGoals, setGlobalGoals] = useState([]);\n\n   /**\n     * Makes an initial request of the users current goals and stores it for use\n     */\n   useEffect(() => {\n      const requestGlobalGoals = async () => {\n         getGlobalGoals();\n      };\n\n      requestGlobalGoals();\n   }, []);\n\n   /**\n     * Makes a GET request to the API for the users' goals\n     * TODO: Once API/Backend is up, make an actual request\n     * NOTE: Uses fake data until API/Backend is up\n     */\n    const getGlobalGoals = async () => {\n      //const response = await api('/members');\n      const response = {\n         data: [{\n            name: \"Start/Write in a positivity journal\",\n            \"add-code\": \"POS247\"\n         },\n         {\n            name: \"Reflect on your day\",\n            \"add-code\": \"YOU123\"\n         },\n         {\n            name: \"Take a walk for 30 minutes\",\n            \"add-code\": \"YOU123\"\n         },\n         {\n            name: \"Meditate for 30 minutes\",\n            \"add-code\": \"MED333\"\n         },\n         {\n            name: \"Volunteer for a local organization\",\n            \"add-code\": \"VOL247\"\n         }]\n      };\n      const requestedGlobalGoals = response.data;\n      setGlobalGoals(requestedGlobalGoals);\n   };\n\n   return globalGoals;\n};\n\nexport default useGlobalGoals;"]},"metadata":{},"sourceType":"module"}